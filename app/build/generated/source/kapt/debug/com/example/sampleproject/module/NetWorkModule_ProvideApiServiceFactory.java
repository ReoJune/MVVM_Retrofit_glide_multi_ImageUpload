// Generated by Dagger (https://dagger.dev).
package com.example.sampleproject.module;

import com.example.sampleproject.api.Network;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetWorkModule_ProvideApiServiceFactory implements Factory<Network> {
  private final NetWorkModule module;

  public NetWorkModule_ProvideApiServiceFactory(NetWorkModule module) {
    this.module = module;
  }

  @Override
  public Network get() {
    return provideApiService(module);
  }

  public static NetWorkModule_ProvideApiServiceFactory create(NetWorkModule module) {
    return new NetWorkModule_ProvideApiServiceFactory(module);
  }

  public static Network provideApiService(NetWorkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideApiService());
  }
}
